[tool]
[tool.poetry]
name = "llmtracer"
version = "1.1.0"
homepage = "https://github.com/blackhc/llmtracer"
description = "LLMTracer: A tool to trace the execution of a program that uses LLMs and visualize the results."
authors = ["Andreas Kirsch <blackhc@gmail.com>"]
readme = "README.md"
license =  "GPL-3.0-only"
classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
]
packages = [
    { include = "llmtracer" },
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

black  = { version = "^22.12.0", optional = true}
isort  = { version = "^5.8.0", optional = true}
flake8  = "^6.0.0"
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = "^1.1.1"
pytest  = { version = "^6.2.4", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
tox  = { version = "^3.20.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
ipykernel = {version = "^6.19.2", optional = true}
openai = "^0.27.4"
manifest-ml = "^0.0.1"
markdown = "<3.4"
protobuf = ">=3.20.0,<3.21.0"
wandb = "^0.15.3"
svgwrite = "^1.4.3"
langchain = "^0.0.352"
reflex = "^0.3.7"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version", "ipykernel"]

[tool.poetry.scripts]
llmtraceviewer = 'llmtracer.tools.trace_viewer.pcconfig:main'

[tool.poetry.group.dev.dependencies]
parse = {version = "^1.19.0", optional = true}

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
python_files = "test_*.py"
